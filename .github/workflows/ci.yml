name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Minimal default permissions for all jobs
permissions:
  contents: read

jobs:
  build:
    name: Lint & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Dockerfile best-practice linting
      - name: Lint Dockerfile (Hadolint)
        run: docker run --rm -i hadolint/hadolint < Dockerfile

      - name: Set up QEMU (enable cross-arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Local build just to catch build errors early
      - name: Build image (local test)
        run: docker build -t app:ci .

  push-image:
    name: Scan then Push to GHCR (multi-arch)
    needs: build
    runs-on: ubuntu-latest
    # Allow pushing to GHCR (package registry)
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build to local daemon so Trivy can scan the image layers
      - name: Build image for scan (local)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: app:ci-scan

      # Vulnerability scan (report-only first; tighten later)
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: app:ci-scan
          format: table
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'   # change to '1' later to fail on findings

      # Build & push a multi-arch image to GHCR
      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/bidishanits/app:latest
          # immutable tag for traceability
            ghcr.io/bidishanits/app:${{ github.sha }}

      - name: Show pushed image
        run: |
          echo "Pushed:"
          echo "  ghcr.io/bidishanits/app:latest"
          echo "  ghcr.io/bidishanits/app:${{ github.sha }}"

